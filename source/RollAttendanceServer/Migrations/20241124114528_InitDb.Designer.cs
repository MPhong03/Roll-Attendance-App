// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RollAttendanceServer.Data;

#nullable disable

namespace RollAttendanceServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241124114528_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.Property<string>("PermissionsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            PermissionsId = "7AB109A6B759479DB2C4BEA8331C9B19",
                            RolesId = "7EADA125BA324296A3980A17A6500027"
                        },
                        new
                        {
                            PermissionsId = "31BC845565614955ADD8C3E9BBFAECC5",
                            RolesId = "D2291DA05EC748398F1476BF67BDD1A5"
                        },
                        new
                        {
                            PermissionsId = "FE56125AC1F24D34901AC79CED6C1CD3",
                            RolesId = "FEFB5EA3647B44DDA62965024521FFAD"
                        });
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = "7AB109A6B759479DB2C4BEA8331C9B19",
                            CreatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9178),
                            DeletedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9183),
                            IsDeleted = false,
                            PermissionName = "Organization Management",
                            PermissionValue = "organization_management",
                            UpdatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9183)
                        },
                        new
                        {
                            Id = "31BC845565614955ADD8C3E9BBFAECC5",
                            CreatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9190),
                            DeletedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9191),
                            IsDeleted = false,
                            PermissionName = "User Management",
                            PermissionValue = "user_management",
                            UpdatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9190)
                        },
                        new
                        {
                            Id = "FE56125AC1F24D34901AC79CED6C1CD3",
                            CreatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9251),
                            DeletedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9252),
                            IsDeleted = false,
                            PermissionName = "Administrator",
                            PermissionValue = "all_permissions",
                            UpdatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9251)
                        });
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "7EADA125BA324296A3980A17A6500027",
                            CreatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9396),
                            DeletedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9396),
                            IsDeleted = false,
                            RoleName = "Organization Manager",
                            UpdatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9396)
                        },
                        new
                        {
                            Id = "D2291DA05EC748398F1476BF67BDD1A5",
                            CreatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9405),
                            DeletedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9406),
                            IsDeleted = false,
                            RoleName = "User Manager",
                            UpdatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9405)
                        },
                        new
                        {
                            Id = "FEFB5EA3647B44DDA62965024521FFAD",
                            CreatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9409),
                            DeletedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9410),
                            IsDeleted = false,
                            RoleName = "Administrator",
                            UpdatedAt = new DateTime(2024, 11, 24, 11, 45, 28, 398, DateTimeKind.Utc).AddTicks(9410)
                        });
                });

            modelBuilder.Entity("RollAttendanceServer.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaceData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.HasOne("RollAttendanceServer.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RollAttendanceServer.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Admin", b =>
                {
                    b.HasOne("RollAttendanceServer.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
