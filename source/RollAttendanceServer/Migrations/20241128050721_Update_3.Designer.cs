// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RollAttendanceServer.Data;

#nullable disable

namespace RollAttendanceServer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241128050721_Update_3")]
    partial class Update_3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.Property<string>("PermissionsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RolesId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            PermissionsId = "53282CBC94354B958B136762DDE33922",
                            RolesId = "62DB22F21EA34D37B05C4A880BBC9AFE"
                        });
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Admin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = "72C16393B1AD4935B44BD369631745A5",
                            Email = "admin@gmail.com",
                            IsDeleted = false,
                            Password = "$2a$10$/UCqfN.AooikYMAQgYWtA.68pk4rIPwMrnO3LkTOQaQzVy8K.4cj.",
                            Phone = "0000000000",
                            RoleId = "62DB22F21EA34D37B05C4A880BBC9AFE"
                        });
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CurrentLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Organization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PermissionValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = "FB55885A201B412796D972DAE7671950",
                            CreatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(2863),
                            IsDeleted = false,
                            PermissionName = "Organization Management",
                            PermissionValue = "organization_management",
                            UpdatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(2866)
                        },
                        new
                        {
                            Id = "BD70289CA2ED4266968980B694D21A27",
                            CreatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(2875),
                            IsDeleted = false,
                            PermissionName = "User Management",
                            PermissionValue = "user_management",
                            UpdatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(2876)
                        },
                        new
                        {
                            Id = "53282CBC94354B958B136762DDE33922",
                            CreatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(2882),
                            IsDeleted = false,
                            PermissionName = "Administrator",
                            PermissionValue = "all_permissions",
                            UpdatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(2882)
                        });
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = "62DB22F21EA34D37B05C4A880BBC9AFE",
                            CreatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(3135),
                            IsDeleted = false,
                            RoleName = "Administrator",
                            UpdatedAt = new DateTime(2024, 11, 28, 5, 7, 20, 255, DateTimeKind.Utc).AddTicks(3136)
                        });
                });

            modelBuilder.Entity("RollAttendanceServer.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FaceData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OrganizationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrganizationId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrganizationId2")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Uid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("OrganizationId1");

                    b.HasIndex("OrganizationId2");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RolePermissions", b =>
                {
                    b.HasOne("RollAttendanceServer.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RollAttendanceServer.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Admin", b =>
                {
                    b.HasOne("RollAttendanceServer.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RollAttendanceServer.Models.User", b =>
                {
                    b.HasOne("RollAttendanceServer.Models.Event", null)
                        .WithMany("PermitedUser")
                        .HasForeignKey("EventId");

                    b.HasOne("RollAttendanceServer.Models.Organization", null)
                        .WithMany("Organizers")
                        .HasForeignKey("OrganizationId");

                    b.HasOne("RollAttendanceServer.Models.Organization", null)
                        .WithMany("Representatives")
                        .HasForeignKey("OrganizationId1");

                    b.HasOne("RollAttendanceServer.Models.Organization", null)
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId2");
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Event", b =>
                {
                    b.Navigation("PermitedUser");
                });

            modelBuilder.Entity("RollAttendanceServer.Models.Organization", b =>
                {
                    b.Navigation("Organizers");

                    b.Navigation("Representatives");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
