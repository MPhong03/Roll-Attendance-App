@inject AuthService AuthService

<MudPaper Width="250px" Class="py-3" Elevation="0">
    <MudNavMenu>
        <MudText Typo="Typo.h6" Class="px-4">My Application</MudText>
        <MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Secondary Text</MudText>
        <MudDivider Class="my-2"/>
        <MudNavLink Href="/">Dashboard</MudNavLink>
        <MudNavLink Href="/organization-management">Organizations</MudNavLink>
        <MudNavLink Href="/user-management">Users</MudNavLink>
        <MudNavGroup Title="Settings" Expanded="true">
            <MudNavLink Href="/" Disabled="true">Users</MudNavLink>
            <MudNavLink @onclick="HandleLogout">Logout</MudNavLink>
        </MudNavGroup>
        <MudNavLink Href="/about">About</MudNavLink>
    </MudNavMenu>
</MudPaper>

@code {
    private async Task HandleLogout()
    {
        try
        {
            LoadingService.Show();
            var response = await AuthService.LogoutAsync();

            if (response.Success)
            {
                LoadingService.Hide();
                Snackbar.Add(response.Message, Severity.Success);
                NavigationManager.NavigateTo("/login");
            }
            else
            {
                LoadingService.Hide();
                Snackbar.Add(response.Message, Severity.Error);
            }
        }
        catch (Exception ex)
        {
            LoadingService.Hide();
            Snackbar.Add("An unexpected error occurred.", Severity.Error);
            Debug.WriteLine(ex.Message);
        }
        finally
        {
            LoadingService.Hide();
        }
    }

}
